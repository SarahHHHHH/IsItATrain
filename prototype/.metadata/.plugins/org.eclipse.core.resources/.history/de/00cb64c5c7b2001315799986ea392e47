import java.awt.event.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.util.concurrent.TimeUnit;

public class TrainControl 
{
	public double trainMass;
	public double maxAcceleration;
	public double maxPower;
	
	public double trackSpeedLimit=120;
	public double safeSpeedLimit;
	public double safeSpeed;
	public int safeLightState;
	public int safeDoorState;
	public double safeAuthority;
	public double safeTemp;
	public double safePower;
	public double currentSpeed;
	public double currentSpeedLimit;
	public double currentAuthority;
	public double currentTemp;
	public int currentLightStats;
	public int currentDoorStats;
	public double suggestedSpeed;
	public double suggestedSpeedLimit;
	public double suggestedAuthority;
	public double suggestedTemp;
	public int suggestedLightStats;
	public int suggestedDoorStats;
	public int brakeSignal;
	public int emergencyBrakeSignal;
	public TrainModel traincart;
	public TrainControllerGUI trainGUI;
	public SafeControl safeControl;
	
	
	
	public TrainControl()
	{
		traincart=new TrainModel();
		trainGUI=new TrainControllerGUI();
		safeControl=new SafeControl(trackSpeedLimit);
		currentSpeed=traincart.speed;
		maxAcceleration=traincart.accelerationMax;
		maxPower=traincart.powerMax;
		trainMass=traincart.totalMass;
		int n=0;
		while(n<1000000)
		{
			suggestedSpeed=trainGUI.getGUISpeed();
			suggestedSpeedLimit=trainGUI.getGUISpeedLimit();
			suggestedTemp=trainGUI.getGUITemp();
			suggestedLightStats=trainGUI.getGUILightSwitch();
			suggestedDoorStats=trainGUI.getGUIDoorSwitch();
			suggestedAuthority=trainGUI.getGUIAuthority();
			brakeSignal=trainGUI.getBrake();
			emergencyBrakeSignal=trainGUI.getEmergencyBrake();
			
			safeSpeed=safeControl.checkTrainSpeed(suggestedSpeed,suggestedSpeedLimit);
			safeSpeedLimit=safeControl.checkTrainSpeedLimit(suggestedSpeedLimit);
			safeLightState=safeControl.checkLightStatusChange(suggestedLightStats);
			safeDoorState=safeControl.checkDoorStatusChange(currentSpeed,suggestedDoorStats);
			safeTemp=safeControl.checkTrainTemp(suggestedTemp);
			safeAuthority=safeControl.checkAuthority(suggestedAuthority);
			safePower=computerPower(suggestedSpeed, currentSpeed,maxPower,maxAcceleration,trainMass);
			putSafePower(safePower);
			putSafeSpeed(safeSpeed);
			putSafeLight(safeLightState);
			putSafeDoor(safeDoorState);
			putSafeTemp(safeTemp);
			putSafeSpeedLimit(safeSpeedLimit);
			putBrake(brakeSignal);
			putEmergencyBrake(emergencyBrakeSignal);
			traincart.updatePhyicsState();
			
			trainGUI.currentSpeedValue=traincart.speed;
			trainGUI.currentSpeedLimitValue=traincart.speedLimit;
			trainGUI.currentTempValue=traincart.temperature;
			trainGUI.currentAccelerationValue=traincart.acceleration;
			
			if(traincart.doorCondition==0)
				trainGUI.currentLightStats="Off";
			else
				trainGUI.currentLightStats="On";
			
			if(traincart.lightCondition==0)
				trainGUI.currentDoorStats="Closed";
			else
				trainGUI.currentDoorStats="Open";
			
			trainGUI.updateDisplay();
			try{
				Thread.sleep(100);
			}
			catch(Exception xx)
			{}
			n++;
		}
		
	}
	
	void putBrake(int brakeSignal)
	{
		traincart.brake=brakeSignal;
	}
	
	void putEmergencyBrake(int emergencyBrakeSignal)
	{
		traincart.emergencyBrake=emergencyBrakeSignal;
	}
	
	void putSafePower(double inputPower)
	{
		traincart.power=inputPower;
	}
	
	void putSafeSpeed(double inputSpeed)
	{
		traincart.goalSpeed=inputSpeed;
	}
	
	void putSafeLight(int inputLight)
	{
		traincart.lightCondition=inputLight;
	}
	
	void putSafeDoor(int inputDoor)
	{
		traincart.doorCondition=inputDoor;
	}
	
	void putSafeTemp(double inputTemp)
	{
		traincart.setTemperature=inputTemp;
	}
	
	void putSafeSpeedLimit(double inputSpeedLimit)
	{
		traincart.speedLimit=inputSpeedLimit;
	}
	
	
	double computerPower(double suggestedSpeed, double currentSpeed, double maxPower, double maxAcceleration, double trainMass)
	{
		double tempPower=currentSpeed*trainMass*maxAcceleration;
		if(tempPower>maxPower)
		{
			tempPower=maxPower;
		}
		if(currentSpeed>=suggestedSpeed)
		{
			tempPower=0;
		}
		return tempPower;
	}
	
	public static void main(String[] args)
	{
		new TrainControl();
	}
	
	
}
